---
import MainLayout from "../../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";

export const prerender = true;

const theme = Astro.cookies.get("theme")?.value as "light" | "dark" | undefined;

const production = import.meta.env.MODE === "production";

const posts = (await getCollection("blog"))
.filter((p) => (production ? ["published", "archived"] : ["published", "draft", "archived"]).includes(p.data.status))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<MainLayout small theme={theme}>
  <section class="flex flex-col w-full">
    {
      posts.length > 0 ? (
        <ul class="flex flex-col w-full gap-2">
          {posts.map((post) => (
            <a href={`/blogs/${post.slug}/`} class="flex flex-col w-full gap-4">
              <li class="flex flex-col w-full border border-neutral-200 dark:border-neutral-900 p-3 rounded-sm gap-4">
                {post.data.heroImage && <img src={post.data.heroImage} alt="" class="rounded-sm" />}
                <div class="flex flex-col gap-3">
                  <div class="flex flex-col gap-1">
                    <div class="flex flex-row items-center justify-between gap-2 w-full">
                      <h1 class="font-bold text-lg w-max">{post.data.title}</h1>
                      <FormattedDate date={post.data.pubDate} relative />
                    </div>
                    <span class="font-medium text-md w-full">{post.data.description}</span>
                  </div>
                </div>
              </li>
            </a>
          ))}
        </ul>
      ) : (
        <p class="text-center">There are currently no posts.</p>
      )
    }
  </section>
</MainLayout>
